[tool.poetry]
name = "fast_zero"
version = "0.1.0"
description = ""
authors = ["Vinicius de Andrade <viniciusdeandrade@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.111.0"
sqlalchemy = "^2.0.31"
pydantic-settings = "^2.3.4"
alembic = "^1.13.1"
pyjwt = "^2.8.0"
pwdlib = {extras = ["argon2"], version = "^0.2.0"}
python-multipart = "^0.0.9"
psycopg = {extras = ["binary"], version = "^3.2.1"}


[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
taskipy = "^1.12.2"
ruff = "^0.4.8"
httpx = "^0.27.0"
factory-boy = "^3.3.0"
freezegun = "^1.5.1"
testcontainers = "^4.7.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'

[tool.taskipy.tasks]

run = 'fastapi dev fast_zero/app.py'

lint = 'ruff check . && ruff check . --diff'
format = 'ruff check . --fix && ruff format .'

pre_test = 'task lint'
test = 'pytest -s -x --cov=fast_zero -vv'
post_test = 'coverage html'